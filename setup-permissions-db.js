const sqlite3 = require('sqlite3').verbose();
const path = require('path');

async function setupPermissionsDB() {
  const dbPath = path.join(__dirname, '.tmp', 'data.db');
  const db = new sqlite3.Database(dbPath);

  console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Ç–æ–∫–µ–Ω–∞ booking-read —á–µ—Ä–µ–∑ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...');

  try {
    // –ü–æ–ª—É—á–∞–µ–º document_id –¥–ª—è –Ω–æ–≤—ã—Ö content types
    const contentTypes = [
      { name: 'api1_stations', action: 'api::api1-station.api1-station' },
      { name: 'api2_stations', action: 'api::api2-station.api2-station' },
      { name: 'station_mappings', action: 'api::station-mapping.station-mapping' },
      { name: 'station_groups', action: 'api::station-group.station-group' },
      { name: 'orders', action: 'api::order.order' }
    ];

    for (const contentType of contentTypes) {
      console.log(`üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–ª—è ${contentType.name}...`);
      
      // –ü–æ–ª—É—á–∞–µ–º document_id –∏–∑ strapi_database_schema
      db.get(
        "SELECT id FROM strapi_database_schema WHERE schema LIKE ?",
        [`%${contentType.name}%`],
        (err, row) => {
          if (err) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è document_id –¥–ª—è ${contentType.name}:`, err);
            return;
          }

          if (row) {
            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω document_id: ${row.id} –¥–ª—è ${contentType.name}`);
            
            // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è find (—á—Ç–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π)
            const findAction = `${contentType.action}.find`;
            db.run(
              "INSERT INTO strapi_api_token_permissions (document_id, action, created_at, updated_at, published_at) VALUES (?, ?, datetime('now'), datetime('now'), datetime('now'))",
              [row.id, findAction],
              function(err) {
                if (err) {
                  console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∞–≤–∞ find –¥–ª—è ${contentType.name}:`, err);
                  return;
                }
                
                const permissionId = this.lastID;
                console.log(`‚úÖ –ü—Ä–∞–≤–æ find —Å–æ–∑–¥–∞–Ω–æ (ID: ${permissionId}) –¥–ª—è ${contentType.name}`);
                
                // –°–≤—è–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–æ —Å —Ç–æ–∫–µ–Ω–æ–º
                db.run(
                  "INSERT INTO strapi_api_token_permissions_token_lnk (api_token_permission_id, api_token_id, api_token_permission_ord) VALUES (?, 3, 1.0)",
                  [permissionId],
                  (err) => {
                    if (err) {
                      console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∞ find –¥–ª—è ${contentType.name}:`, err);
                    } else {
                      console.log(`‚úÖ –ü—Ä–∞–≤–æ find —Å–≤—è–∑–∞–Ω–æ —Å —Ç–æ–∫–µ–Ω–æ–º –¥–ª—è ${contentType.name}`);
                    }
                  }
                );
              }
            );

            // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è findOne (—á—Ç–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏)
            const findOneAction = `${contentType.action}.findOne`;
            db.run(
              "INSERT INTO strapi_api_token_permissions (document_id, action, created_at, updated_at, published_at) VALUES (?, ?, datetime('now'), datetime('now'), datetime('now'))",
              [row.id, findOneAction],
              function(err) {
                if (err) {
                  console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∞–≤–∞ findOne –¥–ª—è ${contentType.name}:`, err);
                  return;
                }
                
                const permissionId = this.lastID;
                console.log(`‚úÖ –ü—Ä–∞–≤–æ findOne —Å–æ–∑–¥–∞–Ω–æ (ID: ${permissionId}) –¥–ª—è ${contentType.name}`);
                
                // –°–≤—è–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–æ —Å —Ç–æ–∫–µ–Ω–æ–º
                db.run(
                  "INSERT INTO strapi_api_token_permissions_token_lnk (api_token_permission_id, api_token_id, api_token_permission_ord) VALUES (?, 3, 2.0)",
                  [permissionId],
                  (err) => {
                    if (err) {
                      console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∞ findOne –¥–ª—è ${contentType.name}:`, err);
                    } else {
                      console.log(`‚úÖ –ü—Ä–∞–≤–æ findOne —Å–≤—è–∑–∞–Ω–æ —Å —Ç–æ–∫–µ–Ω–æ–º –¥–ª—è ${contentType.name}`);
                    }
                  }
                );
              }
            );

            // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è create (—Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π)
            const createAction = `${contentType.action}.create`;
            db.run(
              "INSERT INTO strapi_api_token_permissions (document_id, action, created_at, updated_at, published_at) VALUES (?, ?, datetime('now'), datetime('now'), datetime('now'))",
              [row.id, createAction],
              function(err) {
                if (err) {
                  console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∞–≤–∞ create –¥–ª—è ${contentType.name}:`, err);
                  return;
                }
                
                const permissionId = this.lastID;
                console.log(`‚úÖ –ü—Ä–∞–≤–æ create —Å–æ–∑–¥–∞–Ω–æ (ID: ${permissionId}) –¥–ª—è ${contentType.name}`);
                
                // –°–≤—è–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–æ —Å —Ç–æ–∫–µ–Ω–æ–º
                db.run(
                  "INSERT INTO strapi_api_token_permissions_token_lnk (api_token_permission_id, api_token_id, api_token_permission_ord) VALUES (?, 3, 3.0)",
                  [permissionId],
                  (err) => {
                    if (err) {
                      console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∞ create –¥–ª—è ${contentType.name}:`, err);
                    } else {
                      console.log(`‚úÖ –ü—Ä–∞–≤–æ create —Å–≤—è–∑–∞–Ω–æ —Å —Ç–æ–∫–µ–Ω–æ–º –¥–ª—è ${contentType.name}`);
                    }
                  }
                );
              }
            );

            // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è update (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π)
            const updateAction = `${contentType.action}.update`;
            db.run(
              "INSERT INTO strapi_api_token_permissions (document_id, action, created_at, updated_at, published_at) VALUES (?, ?, datetime('now'), datetime('now'), datetime('now'))",
              [row.id, updateAction],
              function(err) {
                if (err) {
                  console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∞–≤–∞ update –¥–ª—è ${contentType.name}:`, err);
                  return;
                }
                
                const permissionId = this.lastID;
                console.log(`‚úÖ –ü—Ä–∞–≤–æ update —Å–æ–∑–¥–∞–Ω–æ (ID: ${permissionId}) –¥–ª—è ${contentType.name}`);
                
                // –°–≤—è–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–æ —Å —Ç–æ–∫–µ–Ω–æ–º
                db.run(
                  "INSERT INTO strapi_api_token_permissions_token_lnk (api_token_permission_id, api_token_id, api_token_permission_ord) VALUES (?, 3, 4.0)",
                  [permissionId],
                  (err) => {
                    if (err) {
                      console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∞ update –¥–ª—è ${contentType.name}:`, err);
                    } else {
                      console.log(`‚úÖ –ü—Ä–∞–≤–æ update —Å–≤—è–∑–∞–Ω–æ —Å —Ç–æ–∫–µ–Ω–æ–º –¥–ª—è ${contentType.name}`);
                    }
                  }
                );
              }
            );

            // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è delete (—É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π)
            const deleteAction = `${contentType.action}.delete`;
            db.run(
              "INSERT INTO strapi_api_token_permissions (document_id, action, created_at, updated_at, published_at) VALUES (?, ?, datetime('now'), datetime('now'), datetime('now'))",
              [row.id, deleteAction],
              function(err) {
                if (err) {
                  console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∞–≤–∞ delete –¥–ª—è ${contentType.name}:`, err);
                  return;
                }
                
                const permissionId = this.lastID;
                console.log(`‚úÖ –ü—Ä–∞–≤–æ delete —Å–æ–∑–¥–∞–Ω–æ (ID: ${permissionId}) –¥–ª—è ${contentType.name}`);
                
                // –°–≤—è–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–æ —Å —Ç–æ–∫–µ–Ω–æ–º
                db.run(
                  "INSERT INTO strapi_api_token_permissions_token_lnk (api_token_permission_id, api_token_id, api_token_permission_ord) VALUES (?, 3, 5.0)",
                  [permissionId],
                  (err) => {
                    if (err) {
                      console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∞ delete –¥–ª—è ${contentType.name}:`, err);
                    } else {
                      console.log(`‚úÖ –ü—Ä–∞–≤–æ delete —Å–≤—è–∑–∞–Ω–æ —Å —Ç–æ–∫–µ–Ω–æ–º –¥–ª—è ${contentType.name}`);
                    }
                  }
                );
              }
            );

          } else {
            console.log(`‚ö†Ô∏è Document ID –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è ${contentType.name}`);
          }
        }
      );
    }

    console.log('üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞:', error);
  } finally {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    db.close((err) => {
      if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', err);
      } else {
        console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
      }
    });
  }
}

setupPermissionsDB();
