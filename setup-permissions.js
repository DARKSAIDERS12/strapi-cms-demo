const axios = require('axios');

async function setupPermissions() {
  try {
    const token = 'dcda85af31a9b06608f1876b2e37e8b2dacf190aa6163b826ae99a0007fca98acac12890db8bb6faa506de3603f51d4a40c5092faa17e9323436cfec5bc1fd41';
    
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Ç–æ–∫–µ–Ω–∞ booking-read...');

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ content types
    const contentTypes = [
      'api1-station',
      'api2-station', 
      'station-mapping',
      'station-group',
      'order'
    ];

    for (const contentType of contentTypes) {
      console.log(`üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–ª—è ${contentType}...`);
      
      try {
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è find (—á—Ç–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π)
        const findPermission = await axios.post('http://localhost:1337/admin/content-api/permissions', {
          action: `api::${contentType}.${contentType}.find`,
          token: token
        }, {
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
          }
        });
        console.log(`‚úÖ –ü—Ä–∞–≤–æ find —Å–æ–∑–¥–∞–Ω–æ –¥–ª—è ${contentType}`);

        // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è findOne (—á—Ç–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏)
        const findOnePermission = await axios.post('http://localhost:1337/admin/content-api/permissions', {
          action: `api::${contentType}.${contentType}.findOne`,
          token: token
        }, {
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
          }
        });
        console.log(`‚úÖ –ü—Ä–∞–≤–æ findOne —Å–æ–∑–¥–∞–Ω–æ –¥–ª—è ${contentType}`);

        // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è create (—Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π)
        const createPermission = await axios.post('http://localhost:1337/admin/content-api/permissions', {
          action: `api::${contentType}.${contentType}.create`,
          token: token
        }, {
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
          }
        });
        console.log(`‚úÖ –ü—Ä–∞–≤–æ create —Å–æ–∑–¥–∞–Ω–æ –¥–ª—è ${contentType}`);

        // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è update (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π)
        const updatePermission = await axios.post('http://localhost:1337/admin/content-api/permissions', {
          action: `api::${contentType}.${contentType}.update`,
          token: token
        }, {
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
          }
        });
        console.log(`‚úÖ –ü—Ä–∞–≤–æ update —Å–æ–∑–¥–∞–Ω–æ –¥–ª—è ${contentType}`);

        // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è delete (—É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π)
        const deletePermission = await axios.post('http://localhost:1337/admin/content-api/permissions', {
          action: `api::${contentType}.${contentType}.delete`,
          token: token
        }, {
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
          }
        });
        console.log(`‚úÖ –ü—Ä–∞–≤–æ delete —Å–æ–∑–¥–∞–Ω–æ –¥–ª—è ${contentType}`);

      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤ –¥–ª—è ${contentType}:`, error.response?.data || error.message);
      }
    }

    console.log('üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞:', error.response?.data || error.message);
  }
}

setupPermissions();


